[{"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\index.tsx":"1","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\locales\\i18n.ts":"2","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\locales\\translations.ts":"3","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\reportWebVitals.ts":"4","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\configureStore.ts":"5","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\ThemeProvider.tsx":"6","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers.ts":"7","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\index.tsx":"8","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\slice\\selectors.ts":"9","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\routes.ts":"10","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\global-styles.ts":"11","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\utils.ts":"12","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\themes.ts":"13","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\slice\\index.ts":"14","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\index.ts":"15","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\StyleConstants.ts":"16","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Admin\\index.tsx":"17","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\Loadable.ts":"18","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Loadable.ts":"19","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\Loadable.tsx":"20","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Authetication\\index.tsx":"21","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\HomePage\\Loadable.tsx":"22","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Admin\\actionTypes.tsx":"23","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\redux-injectors.ts":"24","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\index.tsx":"25","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\index.tsx":"26","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\apis\\index.tsx":"27","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\@reduxjs\\toolkit.tsx":"28","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Authetication\\actionTypes.tsx":"29","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\index.tsx":"30","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\HomePage\\index.tsx":"31","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\authentication\\index.ts":"32","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\users\\index.ts":"33","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\doctors\\index.ts":"34","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\loadable.tsx":"35","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\axiosService.ts":"36","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\styles.tsx":"37","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\layouts\\Admin.tsx":"38","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\P.ts":"39","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\LoginForm\\index.tsx":"40","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\SignUpStepper\\index.tsx":"41","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Forgot\\index.tsx":"42","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\ForgotLast\\index.tsx":"43","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\asset\\image\\index.tsx":"44","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\asset\\constant\\color.tsx":"45","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\LoadingIndicator\\index.tsx":"46","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Navbars\\AdminNavbar.tsx":"47","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Sidebar\\Sidebar.tsx":"48","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Headers\\HeaderStats.tsx":"49","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Footers\\FooterAdmin.tsx":"50","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Dashboard.tsx":"51","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Doctor.tsx":"52","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Patients.tsx":"53","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Appointment.tsx":"54","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\Link\\index.ts":"55","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\ForgotLast\\styles.tsx":"56","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\index.tsx":"57","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\PageWrapper\\index.ts":"58","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardMain .tsx":"59","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardChart.tsx":"60","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardSocialTraffic.tsx":"61","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardPageVisits.tsx":"62","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardStats.tsx":"63","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\index.tsx":"64","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\News\\index.tsx":"65","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dropdowns\\UserDropdown.tsx":"66","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dropdowns\\NotificationDropdown.tsx":"67","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Navbars\\styles.tsx":"68","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\components\\CustomInput\\index.tsx":"69","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\Nav.tsx":"70","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\News\\styles.tsx":"71","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\styles.tsx":"72","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\components\\CustomInput\\styles.tsx":"73","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\components\\ItemDoctor\\index.tsx":"74","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dialog\\index.tsx":"75","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dialog\\styles.tsx":"76","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\styles.tsx":"77","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\Header.tsx":"78","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Forgot\\styles.tsx":"79","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\SignUpStepper\\styles.tsx":"80","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\LoginForm\\styles.tsx":"81","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\SubNav.tsx":"82","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Add.tsx":"83","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardAdd.tsx":"84","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardSettings.tsx":"85","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardLineChart.js":"86","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardBarChart.js":"87","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\styles.tsx":"88","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\util.ts":"89","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\components\\Header\\index.tsx":"90"},{"size":2102,"mtime":1621501767616,"results":"91","hashOfConfig":"92"},{"size":1155,"mtime":1621793056042,"results":"93","hashOfConfig":"92"},{"size":1127,"mtime":1621793056042,"results":"94","hashOfConfig":"92"},{"size":440,"mtime":1621501767631,"results":"95","hashOfConfig":"92"},{"size":987,"mtime":1621793056042,"results":"96","hashOfConfig":"92"},{"size":528,"mtime":1621501767647,"results":"97","hashOfConfig":"92"},{"size":1023,"mtime":1621775886034,"results":"98","hashOfConfig":"92"},{"size":1511,"mtime":1621793056042,"results":"99","hashOfConfig":"92"},{"size":607,"mtime":1621501767647,"results":"100","hashOfConfig":"92"},{"size":590,"mtime":1621501767616,"results":"101","hashOfConfig":"92"},{"size":756,"mtime":1621501767631,"results":"102","hashOfConfig":"92"},{"size":551,"mtime":1621501767662,"results":"103","hashOfConfig":"92"},{"size":696,"mtime":1621501767662,"results":"104","hashOfConfig":"92"},{"size":775,"mtime":1621501767647,"results":"105","hashOfConfig":"92"},{"size":938,"mtime":1621916027951,"results":"106","hashOfConfig":"92"},{"size":61,"mtime":1621501767631,"results":"107","hashOfConfig":"92"},{"size":874,"mtime":1621880958632,"results":"108","hashOfConfig":"92"},{"size":206,"mtime":1621501767522,"results":"109","hashOfConfig":"92"},{"size":233,"mtime":1621501767569,"results":"110","hashOfConfig":"92"},{"size":369,"mtime":1621501767616,"results":"111","hashOfConfig":"92"},{"size":2151,"mtime":1621680139186,"results":"112","hashOfConfig":"92"},{"size":617,"mtime":1621501767600,"results":"113","hashOfConfig":"92"},{"size":76,"mtime":1621775750795,"results":"114","hashOfConfig":"92"},{"size":470,"mtime":1621793056042,"results":"115","hashOfConfig":"92"},{"size":503,"mtime":1621793056042,"results":"116","hashOfConfig":"92"},{"size":2881,"mtime":1621793056042,"results":"117","hashOfConfig":"92"},{"size":3006,"mtime":1621917445416,"results":"118","hashOfConfig":"92"},{"size":506,"mtime":1621501767662,"results":"119","hashOfConfig":"92"},{"size":321,"mtime":1621793056042,"results":"120","hashOfConfig":"92"},{"size":1216,"mtime":1621501767616,"results":"121","hashOfConfig":"92"},{"size":1015,"mtime":1621942557532,"results":"122","hashOfConfig":"92"},{"size":4604,"mtime":1621888109513,"results":"123","hashOfConfig":"92"},{"size":588,"mtime":1621795934862,"results":"124","hashOfConfig":"92"},{"size":598,"mtime":1621856575977,"results":"125","hashOfConfig":"92"},{"size":764,"mtime":1621793056042,"results":"126","hashOfConfig":"92"},{"size":3661,"mtime":1621913860428,"results":"127","hashOfConfig":"92"},{"size":1708,"mtime":1621501767569,"results":"128","hashOfConfig":"92"},{"size":1441,"mtime":1621845246914,"results":"129","hashOfConfig":"92"},{"size":195,"mtime":1621501767616,"results":"130","hashOfConfig":"92"},{"size":2809,"mtime":1621793056042,"results":"131","hashOfConfig":"92"},{"size":16881,"mtime":1621812024209,"results":"132","hashOfConfig":"92"},{"size":2288,"mtime":1621793056042,"results":"133","hashOfConfig":"92"},{"size":3581,"mtime":1621793056042,"results":"134","hashOfConfig":"92"},{"size":757,"mtime":1621601512407,"results":"135","hashOfConfig":"92"},{"size":141,"mtime":1621501767491,"results":"136","hashOfConfig":"92"},{"size":1113,"mtime":1621501767506,"results":"137","hashOfConfig":"92"},{"size":699,"mtime":1621911618382,"results":"138","hashOfConfig":"92"},{"size":9834,"mtime":1621799563937,"results":"139","hashOfConfig":"92"},{"size":2454,"mtime":1621520748272,"results":"140","hashOfConfig":"92"},{"size":1646,"mtime":1621800008296,"results":"141","hashOfConfig":"92"},{"size":1199,"mtime":1621911837389,"results":"142","hashOfConfig":"92"},{"size":1588,"mtime":1621918138618,"results":"143","hashOfConfig":"92"},{"size":1591,"mtime":1621917814081,"results":"144","hashOfConfig":"92"},{"size":704,"mtime":1621844706767,"results":"145","hashOfConfig":"92"},{"size":323,"mtime":1621501767506,"results":"146","hashOfConfig":"92"},{"size":4540,"mtime":1621714881185,"results":"147","hashOfConfig":"92"},{"size":387,"mtime":1621501767506,"results":"148","hashOfConfig":"92"},{"size":176,"mtime":1621501767522,"results":"149","hashOfConfig":"92"},{"size":8912,"mtime":1621917788623,"results":"150","hashOfConfig":"92"},{"size":1040,"mtime":1621803926679,"results":"151","hashOfConfig":"92"},{"size":3721,"mtime":1621912939983,"results":"152","hashOfConfig":"92"},{"size":10652,"mtime":1621912873297,"results":"153","hashOfConfig":"92"},{"size":2506,"mtime":1621793056042,"results":"154","hashOfConfig":"92"},{"size":709,"mtime":1621953402530,"results":"155","hashOfConfig":"92"},{"size":3055,"mtime":1621501767522,"results":"156","hashOfConfig":"92"},{"size":2864,"mtime":1621501767553,"results":"157","hashOfConfig":"92"},{"size":2576,"mtime":1621501767553,"results":"158","hashOfConfig":"92"},{"size":1213,"mtime":1621540126554,"results":"159","hashOfConfig":"92"},{"size":1904,"mtime":1621713855440,"results":"160","hashOfConfig":"92"},{"size":9690,"mtime":1621922481662,"results":"161","hashOfConfig":"92"},{"size":1945,"mtime":1621501767522,"results":"162","hashOfConfig":"92"},{"size":943,"mtime":1621501767506,"results":"163","hashOfConfig":"92"},{"size":954,"mtime":1621665920770,"results":"164","hashOfConfig":"92"},{"size":1228,"mtime":1621953467516,"results":"165","hashOfConfig":"92"},{"size":3790,"mtime":1621583400164,"results":"166","hashOfConfig":"92"},{"size":4674,"mtime":1621501767553,"results":"167","hashOfConfig":"92"},{"size":457,"mtime":1621920935833,"results":"168","hashOfConfig":"92"},{"size":1457,"mtime":1621921380441,"results":"169","hashOfConfig":"92"},{"size":4540,"mtime":1621713554457,"results":"170","hashOfConfig":"92"},{"size":4189,"mtime":1621812163789,"results":"171","hashOfConfig":"92"},{"size":1155,"mtime":1621501767569,"results":"172","hashOfConfig":"92"},{"size":7447,"mtime":1621922085479,"results":"173","hashOfConfig":"92"},{"size":1356,"mtime":1621916262741,"results":"174","hashOfConfig":"92"},{"size":2247,"mtime":1621802924032,"results":"175","hashOfConfig":"92"},{"size":22524,"mtime":1621910985910,"results":"176","hashOfConfig":"92"},{"size":3534,"mtime":1621842166285,"results":"177","hashOfConfig":"92"},{"size":3323,"mtime":1621842215744,"results":"178","hashOfConfig":"92"},{"size":1927,"mtime":1621851131578,"results":"179","hashOfConfig":"92"},{"size":2760,"mtime":1621918406486,"results":"180","hashOfConfig":"92"},{"size":3311,"mtime":1621953975840,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"1krumn3",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"184"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"184"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"184"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"184"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"184"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"184"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"184"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"184"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"184"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"184"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\index.tsx",[],["379","380"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\locales\\i18n.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\locales\\translations.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\configureStore.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\ThemeProvider.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\slice\\selectors.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\routes.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\global-styles.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\utils.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\themes.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\theme\\slice\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\styles\\StyleConstants.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Admin\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\Loadable.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Loadable.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\Loadable.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Authetication\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\HomePage\\Loadable.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Admin\\actionTypes.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\redux-injectors.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\apis\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\@reduxjs\\toolkit.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\store\\reducers\\Authetication\\actionTypes.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\HomePage\\index.tsx",["381"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\authentication\\index.ts",["382"],"import { call, put } from 'redux-saga/effects';\r\nimport {\r\n  UPDATE_FIELD_SIGN_IN,\r\n  UPDATE_FIELD_SIGN_UP_SEND_EMAIL,\r\n  UPDATE_FIELD_SIGN_IN_ERROR,\r\n  UPDATE_FIELD_SIGN_UP,\r\n  GET_COUNTRY,\r\n} from 'store/reducers/Authetication/actionTypes';\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n  authenticationSignIn,\r\n  authenticationSendEmail,\r\n  authenticationSignUp,\r\n  countryAll,\r\n  authenticationForgot,\r\n  authenticationReset,\r\n  authenticationSignUpDoctor,\r\n} from 'utils/apis';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst expires = process.env.REACT_APP_EXPIRES_COOKIE;\r\n\r\nexport function* signIn(action) {\r\n  try {\r\n    const { status, data } = yield call(authenticationSignIn, action.payload);\r\n\r\n    if (status === 200) {\r\n      Cookies.set('role', data.user.role, expires);\r\n      Cookies.set('email', action.payload.email, expires);\r\n      Cookies.set('password', action.payload.password, expires);\r\n      Cookies.set('access_token', data.tokens.access.token);\r\n      Cookies.set('refresh_token', data.tokens.refresh.token, expires);\r\n      yield put({\r\n        type: UPDATE_FIELD_SIGN_IN,\r\n        payload: {\r\n          email: data.user.email,\r\n          password: action.payload.password,\r\n          role: data.user.role,\r\n          status: status,\r\n        },\r\n      });\r\n    }\r\n    return;\r\n  } catch (err) {\r\n    toast.error('Incorrect email or password');\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_IN_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* signUp(action) {\r\n  try {\r\n    const userName = `${action.payload.fistName}${action.payload.lastName}`;\r\n    const form = new FormData();\r\n    form.append('userName', action.payload.userName ? action.payload.userName : userName);\r\n    form.append('email', action.payload.email);\r\n    form.append('password', action.payload.changepassword);\r\n    form.append('fistName', action.payload.fistName);\r\n    form.append('lastName', action.payload.lastName);\r\n    form.append('dateOfBirth', action.payload.dateOfBirth);\r\n    form.append('country', action.payload.country);\r\n    form.append('city', action.payload.city);\r\n    form.append('address', action.payload.address);\r\n    form.append('postalCode', action.payload.postalCode);\r\n    form.append('phone', action.payload.phone);\r\n    form.append('avatar', action.payload.avatar);\r\n    const { data, status } = yield call(\r\n      action.payload.role.value === 'user' ? authenticationSignUp : authenticationSignUpDoctor,\r\n      form,\r\n    );\r\n    if (status === 201) {\r\n      Cookies.set('email', action.payload.email, expires);\r\n      Cookies.set('password', action.payload.password, expires);\r\n      toast.success(`Add ${action.payload.role.value} success.!`);\r\n      yield put({\r\n        type: UPDATE_FIELD_SIGN_UP,\r\n        payload: {\r\n          email: action.payload.email,\r\n          password: action.payload.password,\r\n          step: 0,\r\n        },\r\n      });\r\n    }\r\n  } catch (err) {\r\n    toast.error('Email already in use.!');\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_UP,\r\n      payload: {\r\n        step: 1,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function* sendEmail(action) {\r\n  try {\r\n    const { status, data } = yield call(authenticationSendEmail, action.payload);\r\n    if (status === 200) {\r\n      yield put({\r\n        type: UPDATE_FIELD_SIGN_UP_SEND_EMAIL,\r\n        payload: {\r\n          email: action.payload.email,\r\n          code: data.code,\r\n        },\r\n      });\r\n    }\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_IN_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getCountry() {\r\n  try {\r\n    const { data } = yield call(countryAll);\r\n    yield put({\r\n      type: GET_COUNTRY,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_IN_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* forgot(action) {\r\n  try {\r\n    const { status } = yield call(authenticationForgot, action.payload);\r\n    if (status === 204) {\r\n      Cookies.set('forgot_email', action.payload.email);\r\n      window.location.reload();\r\n    }\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_IN_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* reset(action) {\r\n  try {\r\n    const { status } = yield call(authenticationReset, {\r\n      token: Cookies.get('forgot_token'),\r\n      password: action.payload.password,\r\n    });\r\n    if (status === 204) {\r\n      Cookies.remove('forgot_token');\r\n      window.location.reload();\r\n    }\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPDATE_FIELD_SIGN_IN_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\users\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\doctors\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\loadable.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\utils\\axiosService.ts",["383"],"import axios from 'axios';\r\nexport class ResponseError extends Error {\r\n  public response: Response;\r\n\r\n  constructor(response: Response) {\r\n    super(response.statusText);\r\n    this.response = response;\r\n  }\r\n}\r\n/**\r\n * Parses the JSON returned by a network request\r\n *\r\n * @param  {object} response A response from a network request\r\n *\r\n * @return {object}          The parsed JSON from the request\r\n */\r\nfunction parseJSON(response: Response) {\r\n  if (response.status === 204 || response.status === 205) {\r\n    return null;\r\n  }\r\n  return response.json();\r\n}\r\n\r\n/**\r\n * Checks if a network request came back fine, and throws an error if not\r\n *\r\n * @param  {object} response   A response from a network request\r\n *\r\n * @return {object|undefined} Returns either the response, or throws an error\r\n */\r\nfunction checkStatus(response: Response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n  const error = new ResponseError(response);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n *\r\n * @return {object}           The response data\r\n */\r\nexport async function GET(url: string): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.get(url);\r\n  //@ts-ignore\r\n  const response = checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @return {object}           The response data\r\n */\r\nexport async function POST(url: string, data?: Object): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.post(url, data);\r\n  //@ts-ignore\r\n  const response = await checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param {object} config\r\n * @return {object}           The response data\r\n */\r\nexport async function GET_TOKEN(url: string, config: object): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.get(url, config);\r\n  //@ts-ignore\r\n  const response = checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param {object} config\r\n * @return {object}           The response data\r\n */\r\nexport async function POST_TOKEN(\r\n  url: string,\r\n  data?: Object,\r\n  config?: Object,\r\n): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.post(url, data, config);\r\n  //@ts-ignore\r\n  const response = await checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param {object} config\r\n * @return {object}           The response data\r\n */\r\nexport async function PATH_TOKEN(\r\n  url: string,\r\n  data?: Object,\r\n  config?: Object,\r\n): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.patch(url, data, config);\r\n  //@ts-ignore\r\n  const response = await checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param {object} config\r\n * @return {object}           The response data\r\n */\r\nexport async function DELETE_TOKEN(\r\n  url: string,\r\n  config?: Object,\r\n): Promise<{} | { err: ResponseError }> {\r\n  const fetchResponse = await axios.delete(url, config);\r\n  //@ts-ignore\r\n  const response = await checkStatus(fetchResponse);\r\n  return response;\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\layouts\\Admin.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\NotFoundPage\\P.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\LoginForm\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\SignUpStepper\\index.tsx",["384","385"],"import React, { useState, useEffect, useRef, forwardRef } from 'react';\r\nimport CustomInput from '../components/CustomInput';\r\nimport Images from '../../../asset/image';\r\nimport ReactCodeInput from 'react-verification-code-input';\r\nimport useStyles from './styles';\r\nimport { rootState } from 'store/reducers';\r\nimport { useDispatch, /*connect,*/ useSelector } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Countdown from 'react-countdown';\r\nimport { Grid } from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport Select from 'react-select';\r\nimport { ReactComponent as Calendar } from 'app/asset/image/ic-calendar.svg';\r\nimport { ReactComponent as Role } from 'app/asset/image/ic-role.svg';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nexport interface loginFormInterface {\r\n  handleTosignUp: Function;\r\n}\r\n\r\nconst SignUpStepper = () => {\r\n  const { /*email, phoneNumber,*/ step } = useSelector(\r\n    (state: rootState) => state.authenReducer.signUp,\r\n  );\r\n  const { code, email } = useSelector((state: rootState) => state.authenReducer.email);\r\n  const refToAvatar = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n  const [codeEnter, setCodeEnter] = useState({ code: 0 });\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showPassConfirm, setShowPassConfirm] = useState(false);\r\n  const [location, setLocation] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (step === 0) setLocation(true);\r\n  }, [step]);\r\n\r\n  const CustomInputDatePicker = forwardRef((props: any, ref) => {\r\n    return (\r\n      <input\r\n        style={{\r\n          border: '0px',\r\n          height: '50px',\r\n          width: '396px',\r\n          outline: 'none',\r\n          fontSize: '15px',\r\n          '&:active': {\r\n            border: '0px',\r\n          },\r\n        }}\r\n        {...props}\r\n        ref={ref}\r\n      />\r\n    );\r\n  });\r\n\r\n  const handleStep = moveStep => {\r\n    if (moveStep < 0) {\r\n      step > 1 &&\r\n        dispatch({\r\n          type: 'UPDATE_FIELD_SIGN_UP',\r\n          payload: {\r\n            step: step + moveStep,\r\n          },\r\n        });\r\n    } else {\r\n      step < 6 &&\r\n        dispatch({\r\n          type: 'UPDATE_FIELD_SIGN_UP',\r\n          payload: {\r\n            step: step + moveStep,\r\n          },\r\n        });\r\n    }\r\n  };\r\n\r\n  const sendEmail = email => {\r\n    if (email) {\r\n      toast.success(`Success step ${step}/5 !`);\r\n      handleStep(1);\r\n      dispatch({\r\n        type: 'UPDATE_FIELD_SIGN_UP_SEND_EMAIL',\r\n        payload: {\r\n          email: email,\r\n        },\r\n      });\r\n    } else toast.error('Please enter gmail for authentication.!');\r\n  };\r\n\r\n  const codeEmail = () => {\r\n    if (codeEnter.code === code) {\r\n      toast.success(`Success step ${step}/5 !`);\r\n      handleStep(1);\r\n    } else toast.error('Authentication code is incorrect.!');\r\n  };\r\n\r\n  const checkField = err => {\r\n    err.fistName ||\r\n    err.lastName ||\r\n    err.dateOfBirth ||\r\n    err.country ||\r\n    err.city ||\r\n    err.address ||\r\n    err.postalCode ||\r\n    err.phone\r\n      ? toast.error('Please check field.!')\r\n      : toast.success(`Success step ${step}/5 !`) && handleStep(1);\r\n  };\r\n\r\n  const checkAuth = err => {\r\n    err.changepassword\r\n      ? toast.error(err.changepassword)\r\n      : toast.success(`Success step ${step}/5 !`) && handleStep(1);\r\n  };\r\n\r\n  const checkAvatar = (err, values) => {\r\n    err.avatar\r\n      ? toast.error(err.avatar)\r\n      : toast.success(`Success step ${step}/5 !`) && signUp(values) && handleStep(1);\r\n  };\r\n\r\n  const handleChooseAvatar = () => {\r\n    if (refToAvatar.current !== null) {\r\n      refToAvatar.current.click();\r\n    }\r\n  };\r\n\r\n  const signUp = values => {\r\n    dispatch({\r\n      type: 'UPDATE_FIELD_SIGN_UP_API',\r\n      payload: values,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {location === false ? (\r\n        <Formik\r\n          initialValues={{\r\n            email: email,\r\n            fistName: '',\r\n            lastName: '',\r\n            gender: '',\r\n            role: { value: 'user', label: 'User' },\r\n            dateOfBirth: new Date(),\r\n            password: '',\r\n            changepassword: '',\r\n            country: '',\r\n            city: '',\r\n            address: '',\r\n            postalCode: '',\r\n            phone: '',\r\n            avatar: '',\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={signUp}\r\n        >\r\n          {({ handleChange, values, setFieldValue, errors }) => (\r\n            <Form className={classes.wrapperForm}>\r\n              <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n              <div className={classes.wrapperSignUp}>\r\n                {step === 1 ? (\r\n                  <>\r\n                    <CustomInput\r\n                      defaultvalue={values.email}\r\n                      name=\"email\"\r\n                      typeInput=\"email\"\r\n                      iconLeft={Images.icMail.default}\r\n                      placeholder={'Email your email address'}\r\n                      handlerChange={e => handleChange(e)}\r\n                    />\r\n                    <div className={classes.addressIcon}>\r\n                      <Role className={classes.address} />\r\n                    </div>\r\n                    <Select\r\n                      value={values.role}\r\n                      onChange={e => setFieldValue('role', e)}\r\n                      options={[\r\n                        { value: 'user', label: 'User' },\r\n                        { value: 'doctor', label: 'Doctor' },\r\n                      ]}\r\n                      styles={{\r\n                        container: base => ({\r\n                          ...base,\r\n                          backgroundColor: '#fff',\r\n                          borderRadius: '5px',\r\n                          marginTop: '18px',\r\n                          height: '50px',\r\n                        }),\r\n                        control: provided => ({\r\n                          ...provided,\r\n                          height: '50px',\r\n                          padding: 10,\r\n                          marginLeft: 0,\r\n                          border: '0px solid black',\r\n                          fontSize: 16,\r\n                          backgroundColor: 'white',\r\n                          outline: 'none',\r\n                          textALign: 'center',\r\n                        }),\r\n                        singleValue: base => ({\r\n                          ...base,\r\n                          padding: 47,\r\n                          fontSize: '15px',\r\n                          borderRadius: 5,\r\n                          color: '#000',\r\n                          background: '#fff',\r\n                          display: 'flex',\r\n                        }),\r\n                        placeholder: base => ({\r\n                          ...base,\r\n                          padding: 47,\r\n                          fontSize: '15px',\r\n                          color: '#c8c8c8',\r\n                        }),\r\n                        option: base => ({\r\n                          ...base,\r\n                          height: '100%',\r\n                        }),\r\n                        loadingMessage: base => ({\r\n                          ...base,\r\n                          backgroundColor: '#000',\r\n                          color: 'white',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : step === 2 ? (\r\n                  <>\r\n                    <ReactCodeInput\r\n                      className={classes.otpCode}\r\n                      type=\"number\"\r\n                      onChange={e => setCodeEnter({ code: Number(e) })}\r\n                      fields={4}\r\n                    />\r\n                    <div className={classes.sentCode}>\r\n                      Resend code in{' '}\r\n                      <span className={classes.time}>\r\n                        <Countdown date={Date.now() + 220000} />\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                ) : step === 3 ? (\r\n                  <>\r\n                    <Grid direction=\"row\" container>\r\n                      <CustomInput\r\n                        defaultvalue={values.phone}\r\n                        name=\"phone\"\r\n                        iconLeft={Images.icPhone.default}\r\n                        handlerChange={e => handleChange(e)}\r\n                        placeholder={'Phone Number'}\r\n                      />\r\n                      <Grid xs={6}>\r\n                        <CustomInput\r\n                          defaultvalue={values.fistName}\r\n                          name=\"fistName\"\r\n                          iconLeft={Images.icPerson.default}\r\n                          handlerChange={e => handleChange(e)}\r\n                          placeholder={'Fist name'}\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={1} />\r\n                      <Grid xs={5}>\r\n                        <CustomInput\r\n                          defaultvalue={values.lastName}\r\n                          name=\"lastName\"\r\n                          handlerChange={e => handleChange(e)}\r\n                          placeholder={'Last Name'}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid xs={12} className={classes.datePicker}>\r\n                      <Calendar className={classes.date} />\r\n                      <DatePicker\r\n                        selected={values.dateOfBirth}\r\n                        onChange={date => {\r\n                          setFieldValue('dateOfBirth', date);\r\n                        }}\r\n                        isClearable={true}\r\n                        placeholderText=\"Date Time\"\r\n                        customInput={<CustomInputDatePicker />}\r\n                      />\r\n                    </Grid>\r\n                    <CustomInput\r\n                      defaultvalue={values.country}\r\n                      name=\"country\"\r\n                      iconLeft={Images.isCountry.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      placeholder={'Country'}\r\n                    />\r\n                    <CustomInput\r\n                      defaultvalue={values.city}\r\n                      name=\"city\"\r\n                      iconLeft={Images.isCity.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      placeholder={'City'}\r\n                    />\r\n                    <CustomInput\r\n                      defaultvalue={values.address}\r\n                      name=\"address\"\r\n                      iconLeft={Images.isAddress.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      placeholder={'address'}\r\n                    />\r\n                    <CustomInput\r\n                      defaultvalue={values.postalCode}\r\n                      name=\"postalCode\"\r\n                      iconLeft={Images.isPostcode.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      placeholder={'Postal Code'}\r\n                    />\r\n                  </>\r\n                ) : step === 4 ? (\r\n                  <>\r\n                    <CustomInput\r\n                      name=\"password\"\r\n                      defaultvalue={values.password}\r\n                      typeInput={showPass ? 'text' : 'password'}\r\n                      placeholder=\"Password\"\r\n                      iconLeft={Images.iconPass.default}\r\n                      iconRight={Images.iconOpenPass.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      handleClickRightIcon={() => setShowPass(!showPass)}\r\n                    />\r\n                    <CustomInput\r\n                      name=\"changepassword\"\r\n                      defaultvalue={values.changepassword}\r\n                      typeInput={showPassConfirm ? 'text' : 'password'}\r\n                      placeholder=\"changepassword\"\r\n                      iconLeft={Images.iconPass.default}\r\n                      handlerChange={e => handleChange(e)}\r\n                      handleClickRightIcon={() => setShowPassConfirm(!showPassConfirm)}\r\n                    />\r\n                  </>\r\n                ) : step === 5 ? (\r\n                  <>\r\n                    <input\r\n                      hidden\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      name=\"avatar\"\r\n                      onChange={e => {\r\n                        //@ts-ignore\r\n\r\n                        const file = e.target.files[0];\r\n                        setFieldValue('avatar', file);\r\n                      }}\r\n                      ref={refToAvatar}\r\n                    />\r\n                    {values.avatar ? (\r\n                      <>\r\n                        <img src={URL.createObjectURL(values.avatar)} className={classes.avatar} />\r\n                        <div onClick={handleChooseAvatar} className={classes.changeImage}>\r\n                          Change image\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className={classes.areaUploadAvatar} onClick={handleChooseAvatar}>\r\n                        <img src={Images.iconAdd.default} />\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n                <button\r\n                  className={classes.continueBtn}\r\n                  onClick={() =>\r\n                    step === 1\r\n                      ? sendEmail(values.email)\r\n                      : step === 2\r\n                      ? codeEmail()\r\n                      : step === 3\r\n                      ? checkField(errors)\r\n                      : step === 4\r\n                      ? checkAuth(errors)\r\n                      : step === 5\r\n                      ? checkAvatar(errors, values)\r\n                      : null\r\n                  }\r\n                >\r\n                  {step < 5 ? 'Next' : 'Sign up'}\r\n                  <div className={classes.step}>Step {step}/5</div>\r\n                </button>\r\n                {step !== 1 ? (\r\n                  <button className={classes.prevBtn} onClick={() => handleStep(-1)}>\r\n                    Back to\r\n                  </button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      ) : (\r\n        window.location.reload()\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Schema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .trim()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid name.!')\r\n    .min(10, 'Too Short !')\r\n    .max(13, 'Too Long !')\r\n    .required('Please enter phone.!'),\r\n  fistName: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid fist name.!')\r\n    .min(0, 'Too Short !')\r\n    .max(15, 'Too Long !')\r\n    .required('Please enter fist name.!'),\r\n  lastName: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid last name.!')\r\n    .min(0, 'Too Short !')\r\n    .max(10, 'Too Long !')\r\n    .required('Please enter last name.!'),\r\n  dateOfBirth: Yup.string()\r\n    .min(0, 'Too Short !')\r\n    .max(100, 'Too Long !')\r\n    .required('Please enter phone.!'),\r\n  country: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid last date of birth.!')\r\n    .min(0, 'Too Short !')\r\n    .max(50, 'Too Long !')\r\n    .required('Please enter date of birth.!'),\r\n  city: Yup.string().min(0, 'Too Short !').max(50, 'Too Long !').required('Please enter city.!'),\r\n  address: Yup.string()\r\n    .min(0, 'Too Short !')\r\n    .max(10, 'Too Long !')\r\n    .required('Please enter address.!'),\r\n  postalCode: Yup.string()\r\n    .min(0, 'Too Short !')\r\n    .max(10, 'Too Long !')\r\n    .required('Please enter postal code.!'),\r\n  phone: Yup.string()\r\n    .trim()\r\n    .min(0, 'Too Short !')\r\n    .max(10, 'Too Long !')\r\n    .required('Please enter phone.!'),\r\n  avatar: Yup.string()\r\n    .trim()\r\n    .min(0, 'Too Short !')\r\n    .max(250, 'Too Long !')\r\n    .required('Please enter avatar.!'),\r\n  password: Yup.string().required('This field is required.!'),\r\n  changepassword: Yup.string()\r\n    .required('This field is required.!')\r\n    .when('password', {\r\n      is: val => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\r\n    }),\r\n});\r\n\r\nexport default SignUpStepper;\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Forgot\\index.tsx",["386","387","388","389","390"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomInput from '../components/CustomInput';\r\nimport Images from '../../../asset/image';\r\nimport useStyles from './styles';\r\nimport { rootState } from 'store/reducers';\r\nimport { useDispatch, /*connect,*/ useSelector } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\n\r\nexport interface loginFormInterface {\r\n  handleTosignUp: Function;\r\n}\r\n\r\nconst Forgot = () => {\r\n  const dispatch = useDispatch();\r\n  const [location, setLocation] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const signUp = values => {\r\n    dispatch({\r\n      type: 'FORGOT_SIGN_IN',\r\n      payload: values,\r\n    });\r\n  };\r\n\r\n  const recaptchaRef = React.createRef();\r\n  return (\r\n    <>\r\n      {location === false ? (\r\n        <Formik\r\n          initialValues={{\r\n            email: ' ',\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={signUp}\r\n        >\r\n          {({ handleChange, values, errors, handleSubmit }) => (\r\n            <Form className={classes.wrapperForm}>\r\n              <div className={classes.wrapperSignUp}>\r\n                <CustomInput\r\n                  defaultvalue={values.email}\r\n                  name=\"email\"\r\n                  typeInput=\"email\"\r\n                  iconLeft={Images.icMail.default}\r\n                  placeholder={'Email your email address'}\r\n                  handlerChange={e => handleChange(e)}\r\n                />\r\n                <div className={classes.captCha}>\r\n                  <ReCAPTCHA sitekey=\"Your client site key\" ref={recaptchaRef} />,\r\n                </div>\r\n                <button\r\n                  className={classes.continueBtn}\r\n                  onClick={() => (errors ? toast.error(errors.email) : handleSubmit)}\r\n                >\r\n                  Send password rest email\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      ) : (\r\n        window.location.reload()\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Schema = Yup.object().shape({\r\n  email: Yup.string().trim().max(50, 'Too Long !').required('Please enter email.!'),\r\n});\r\n\r\nexport default Forgot;\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\ForgotLast\\index.tsx",["391","392","393","394","395"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport CustomInput from '../components/CustomInput';\r\nimport Images from '../../../asset/image';\r\nimport useStyles from './styles';\r\nimport { rootState } from 'store/reducers';\r\nimport { useDispatch, /*connect,*/ useSelector } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport interface loginFormInterface {\r\n  handleTosignUp: Function;\r\n}\r\n\r\nconst ForgotLast = () => {\r\n  const dispatch = useDispatch();\r\n  const [location, setLocation] = useState(false);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showPassConfirm, setShowPassConfirm] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const signUp = values => {\r\n    dispatch({\r\n      type: 'RESET_SIGN_IN',\r\n      payload: values,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {location === false ? (\r\n        <Formik\r\n          initialValues={{\r\n            password: '',\r\n            changepassword: '',\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={signUp}\r\n        >\r\n          {({ handleChange, values, errors }) => (\r\n            <Form className={classes.wrapperForm}>\r\n              <div className={classes.wrapperSignUp}>\r\n                <CustomInput\r\n                  name=\"password\"\r\n                  defaultvalue={values.password}\r\n                  typeInput={showPass ? 'text' : 'password'}\r\n                  placeholder=\"Password\"\r\n                  iconLeft={Images.iconPass.default}\r\n                  iconRight={Images.iconOpenPass.default}\r\n                  handlerChange={e => handleChange(e)}\r\n                  handleClickRightIcon={() => setShowPass(!showPass)}\r\n                />\r\n                <CustomInput\r\n                  name=\"changepassword\"\r\n                  defaultvalue={values.changepassword}\r\n                  typeInput={showPassConfirm ? 'text' : 'password'}\r\n                  placeholder=\"changepassword\"\r\n                  iconLeft={Images.iconPass.default}\r\n                  iconRight={Images.iconOpenPass.default}\r\n                  handlerChange={e => handleChange(e)}\r\n                  handleClickRightIcon={() => setShowPassConfirm(!showPassConfirm)}\r\n                />\r\n                <p\r\n                  style={{\r\n                    textAlign: 'justify',\r\n                    fontSize: '15px',\r\n                    color: '#011',\r\n                    padding: 10,\r\n                    margin: '18 10 0 10',\r\n                  }}\r\n                >\r\n                  Make sure it's at least 15 characters OR at least 8 characters including a number\r\n                  and a lowercase letter.\r\n                </p>\r\n                <button\r\n                  className={classes.continueBtn}\r\n                  onClick={() => {\r\n                    errors ? toast.error(errors.changepassword) : signUp(values);\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      ) : (\r\n        window.location.reload()\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Schema = Yup.object().shape({\r\n  password: Yup.string().required('This field is required.!'),\r\n  changepassword: Yup.string()\r\n    .required('This field is required.!')\r\n    .when('password', {\r\n      is: val => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\r\n    }),\r\n});\r\n\r\nexport default ForgotLast;\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\asset\\image\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\asset\\constant\\color.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\LoadingIndicator\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Navbars\\AdminNavbar.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Headers\\HeaderStats.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Footers\\FooterAdmin.tsx",["396","397","398"],"import React from 'react';\r\n\r\nexport default function FooterAdmin() {\r\n  return (\r\n    <>\r\n      <footer className=\"block py-4\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <hr className=\"mb-4 border-b-1 border-blueGray-200\" />\r\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n            <div className=\"w-full md:w-4/12 px-4\">\r\n              <div className=\"text-sm text-blueGray-500 font-semibold py-1 text-center md:text-left\">\r\n                Copyright © {new Date().getFullYear()}{' '}\r\n                <a\r\n                  href=\"\"\r\n                  className=\"text-blueGray-500 hover:text-blueGray-700 text-sm font-semibold py-1\"\r\n                >\r\n                  Creative Duy Vu\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-8/12 px-4\">\r\n              <ul className=\"flex flex-wrap list-none md:justify-end  justify-center\">\r\n                <li>\r\n                  <a\r\n                    href=\"\"\r\n                    className=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n                  >\r\n                    Creative Duy Vu\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"\"\r\n                    className=\"text-blueGray-600 hover:text-blueGray-800 text-sm font-semibold block py-1 px-3\"\r\n                  >\r\n                    About Us\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Dashboard.tsx",["399"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport CardPageVisits from '../../components/Cards/CardPageVisits';\r\nimport CardSocialTraffic from '../../components/Cards/CardSocialTraffic';\r\nimport CradLineChat from '../../components/Cards/CardLineChart.js';\r\nimport CardBarChart from '../../components/Cards/CardBarChart.js';\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: 'GET_ALL_DOCTOR_API',\r\n      payload: {\r\n        token: Cookies.get('access_token'),\r\n        page: 1,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-wrap mt-4\">\r\n        <div className=\"w-full  xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CradLineChat />\r\n        </div>\r\n        <div className=\"w-full  xl:w-4/12 mb-12 xl:mb-0 px-4\">\r\n          <CardBarChart />\r\n        </div>\r\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\r\n          <CardPageVisits />\r\n        </div>\r\n        <div className=\"w-full xl:w-4/12 mb-12 xl:mb-0 px-4\">\r\n          <CardSocialTraffic />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Doctor.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Patients.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Appointment.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\Link\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\ForgotLast\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\PageWrapper\\index.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardMain .tsx",["400"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { rootState } from 'store/reducers';\r\nimport Cookies from 'js-cookie';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nexport default function CardTable(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [formDialog, setFormDialog] = React.useState(false);\r\n  const [id, setId] = React.useState({ id: '', role: '', token: Cookies.get('access_token') });\r\n\r\n  const { data } = useSelector((state: rootState) => state.userReducer.getAllUser);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setFormDialog(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"alert-dialog-description\"\r\n            style={{\r\n              width: '300px',\r\n              height: '100px',\r\n              marginTop: '70px',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <h4> {`DO YOU WANT DELETE`}</h4>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={{ padding: '0px' }}>\r\n          <Grid item={true} xs={12} style={{ display: 'flex' }}>\r\n            <Grid\r\n              item={true}\r\n              xs={6}\r\n              style={{\r\n                textAlign: 'center',\r\n\r\n                backgroundColor: 'rgb(230, 230, 230)',\r\n              }}\r\n            >\r\n              <Button onClick={handleClose} color=\"secondary\">\r\n                No\r\n              </Button>\r\n            </Grid>\r\n            <Grid\r\n              item={true}\r\n              xs={6}\r\n              style={{\r\n                textAlign: 'center',\r\n                backgroundColor: 'rgb(230, 230, 230)',\r\n                outline: 0,\r\n                border: 0,\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={() => {\r\n                  handleClose();\r\n                  props.fucDelete(id);\r\n                }}\r\n                color=\"primary\"\r\n                autoFocus\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: 'rgb(230, 230, 230)',\r\n                  outline: 0,\r\n                  border: 0,\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          marginBottom: '10px',\r\n        }}\r\n      >\r\n        <Link to={props.to}>\r\n          <Button variant=\"contained\" style={{ background: '#fff', outline: 0 }}>\r\n            <AddIcon />\r\n            {`  ${props.button}`}\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className={\r\n          'relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded ' +\r\n          (props.color === 'light' ? 'bg-white' : 'bg-lightBlue-900 text-white')\r\n        }\r\n      >\r\n        <div className=\"block w-full overflow-x-auto\">\r\n          {/* Projects table */}\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            <thead>\r\n              <tr>\r\n                {props.column.map((value, key) => (\r\n                  <th\r\n                    className={\r\n                      'px-6 ' +\r\n                      (value === 'Action' ? 'text-center' : 'text-left') +\r\n                      ' align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold ' +\r\n                      (props.color === 'light'\r\n                        ? 'bg-blueGray-50 text-blueGray-500 border-blueGray-100'\r\n                        : 'bg-lightBlue-800 text-lightBlue-300 border-lightBlue-700')\r\n                    }\r\n                  >\r\n                    {value}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                //@ts-ignore\r\n                data.results ? (\r\n                  //@ts-ignore\r\n                  data.results.map((value, index) =>\r\n                    value?.role === 'doctor' || value?.role === 'user' ? (\r\n                      <tr>\r\n                        <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left flex items-center\">\r\n                          <img\r\n                            src={value.avatar}\r\n                            className=\"h-12 w-12 bg-white rounded-full border\"\r\n                            alt=\"...\"\r\n                          ></img>{' '}\r\n                          <span\r\n                            className={\r\n                              'ml-3 font-bold ' +\r\n                              +(props.color === 'light' ? 'text-blueGray-600' : 'text-white')\r\n                            }\r\n                          >\r\n                            {`${value.fistName} ${value.lastName}`}\r\n                          </span>\r\n                        </th>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                          {value.dateOfBirth}\r\n                        </td>\r\n\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                          <div className=\"flex items-center\">\r\n                            <span className=\"mr-2\">{` ${\r\n                              value.country ? value.country : 'Viet Nam'\r\n                            }, ${value.city}, ${value.address}.`}</span>\r\n                          </div>\r\n                        </td>\r\n\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                          {value.phone\r\n                            ? `(+84) ${value.phone.substring(1, 13)}`\r\n                            : '(+84) 335209131'}\r\n                        </td>\r\n\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                          {value.email}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 \">\r\n                          <Grid style={{ textAlign: 'center' }}>\r\n                            <Link\r\n                              to={`${props.to}?id=${value.id}&avatar=${value.avatar}&city=${value.city}&dateOfBirth=${value.dateOfBirth}&email=${value.email}&fistName=${value.fistName}&lastName=${value.lastName}&postalCode=${value.postalCode}&address=${value.address}&role=${value.role}&userName=${value.userName}&country=${value.country}&phone=${value.phone}`}\r\n                            >\r\n                              <IconButton color=\"primary\" style={{ outline: 0 }}>\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </Link>\r\n\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              style={{ outline: 0 }}\r\n                              onClick={() => {\r\n                                setOpen(true);\r\n                                //@ts-ignore\r\n                                setId({ ...id, id: value.id, role: value.role });\r\n                              }}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <></>\r\n                    ),\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          marginBottom: '2px',\r\n        }}\r\n      >\r\n        <Pagination\r\n          onChange={(e, values) => {\r\n            props.fucPage(values);\r\n          }}\r\n          //@ts-ignore\r\n          count={data.totalPages}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nCardTable.defaultProps = {\r\n  color: 'light',\r\n};\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardChart.tsx",["401"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardSocialTraffic.tsx",["402"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { rootState } from 'store/reducers';\r\nexport default function CardSocialTraffic() {\r\n  const { data } = useSelector((state: rootState) => state.userReducer.getAllUser);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n        <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n          <div className=\"flex flex-wrap items-center\">\r\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n              <h3 className=\"font-semibold text-base text-blueGray-700\">Doctors</h3>\r\n            </div>\r\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n              <button\r\n                className=\"bg-lightBlue-500 h-10 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n              >\r\n                View all\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"block w-full overflow-x-auto\">\r\n          {/* Projects table */}\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            <thead className=\"thead-light\">\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                //@ts-ignore\r\n                data.results ? (\r\n                  // @ts-ignore\r\n                  data.results.map((value, index) => (\r\n                    <tr>\r\n                      <th className=\" flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                        <img className=\"h-16 rounded-full\" src={value.avatar} />\r\n                        <div className=\"items-content m-4\">\r\n                          <p>Mr. {value.userName}</p>\r\n                          <p className=\"text-lightBlue-600\">\r\n                            {value.city}, {value.country}\r\n                          </p>\r\n                        </div>\r\n                      </th>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\r\n                        <div className=\"flex items-center\">\r\n                          <span className=\"mr-2\">50%</span>\r\n                          <div className=\"relative w-full\">\r\n                            <div className=\"overflow-hidden h-2 text-xs flex rounded bg-red-200\">\r\n                              <div\r\n                                style={{ width: '60%' }}\r\n                                className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-red-500\"\r\n                              ></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <></>\r\n                )\r\n              }\r\n            </tbody>\r\n            <div className=\"thead-light w-full\">\r\n              <tr></tr>\r\n            </div>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardPageVisits.tsx",["403","404","405","406","407","408"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n// components\r\n\r\nexport default function CardPageVisits() {\r\n  return (\r\n    <>\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n        <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n          <div className=\"flex flex-wrap items-center\">\r\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n              <h3 className=\"font-semibold text-base text-blueGray-700\">Upcoming Appointments</h3>\r\n            </div>\r\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n              <button\r\n                className=\"bg-lightBlue-500 h-10 text-white active:bg-lightBlue-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n              >\r\n                View all\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"block w-full overflow-x-auto\">\r\n          {/* Projects table */}\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            <thead className=\"thead-light\">\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n              <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\"></th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th className=\"flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <img className=\"h-16 rounded-full\" src=\"../../assets/img/angular.jpg\" />\r\n                  <div className=\"items-content m-4\">\r\n                    <p>Mr. Duy vu</p>\r\n                    <p className=\"text-lightBlue-600\">New York, USA</p>\r\n                  </div>\r\n                </th>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Appointment With</p>\r\n                  <p className=\"text-lightBlue-600\">Dr. Cristina Groves</p>\r\n                </td>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Timing</p>\r\n                  <p className=\"text-lightBlue-600\">7.00 PM</p>\r\n                </td>\r\n                <td className=\" border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-right\">\r\n                  <button\r\n                    className=\"bg-white h-10 mr-4 hover:bg--blueGray-800 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                    style={{\r\n                      border: '1px solid  rgba(14, 165, 233) ',\r\n                      color: 'rgba(14, 165, 233)',\r\n                    }}\r\n                    type=\"button\"\r\n                  >\r\n                    Take up\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <img className=\"h-16 rounded-full\" src=\"../../assets/img/angular.jpg\" />\r\n                  <div className=\"items-content m-4\">\r\n                    <p>Mr. Duy vu</p>\r\n                    <p className=\"text-lightBlue-600\">New York, USA</p>\r\n                  </div>\r\n                </th>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Appointment With</p>\r\n                  <p className=\"text-lightBlue-600\">Dr. Cristina Groves</p>\r\n                </td>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Timing</p>\r\n                  <p className=\"text-lightBlue-600\">7.00 PM</p>\r\n                </td>\r\n                <td className=\" border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-right\">\r\n                  <button\r\n                    className=\"bg-white h-10 mr-4 hover:bg-lightBlue-600 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                    style={{\r\n                      border: '1px solid  rgba(14, 165, 233) ',\r\n                      color: 'rgba(14, 165, 233)',\r\n                    }}\r\n                    type=\"button\"\r\n                  >\r\n                    Take up\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <img className=\"h-16 rounded-full\" src=\"../../assets/img/angular.jpg\" />\r\n                  <div className=\"items-content m-4\">\r\n                    <p>Mr. Duy vu</p>\r\n                    <p className=\"text-lightBlue-600\">New York, USA</p>\r\n                  </div>\r\n                </th>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Appointment With</p>\r\n                  <p className=\"text-lightBlue-600\">Dr. Cristina Groves</p>\r\n                </td>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Timing</p>\r\n                  <p className=\"text-lightBlue-600\">7.00 PM</p>\r\n                </td>\r\n                <td className=\" border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-right\">\r\n                  <button\r\n                    className=\"bg-white h-10 mr-4 active:text-lightBlue-600 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                    style={{\r\n                      border: '1px solid  rgba(14, 165, 233) ',\r\n                      color: 'rgba(14, 165, 233)',\r\n                    }}\r\n                    type=\"button\"\r\n                  >\r\n                    Take up\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <img className=\"h-16 rounded-full\" src=\"../../assets/img/angular.jpg\" />\r\n                  <div className=\"items-content m-4\">\r\n                    <p>Mr. Duy vu</p>\r\n                    <p className=\"text-lightBlue-600\">New York, USA</p>\r\n                  </div>\r\n                </th>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Appointment With</p>\r\n                  <p className=\"text-lightBlue-600\">Dr. Cristina Groves</p>\r\n                </td>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Timing</p>\r\n                  <p className=\"text-lightBlue-600\">7.00 PM</p>\r\n                </td>\r\n                <td className=\" border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-right\">\r\n                  <button\r\n                    className=\"bg-white h-10 mr-4 active:bg-lightBlue-600 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                    style={{\r\n                      border: '1px solid  rgba(14, 165, 233) ',\r\n                      color: 'rgba(14, 165, 233)',\r\n                    }}\r\n                    type=\"button\"\r\n                  >\r\n                    Take up\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"flex border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <img className=\"h-16 rounded-full\" src=\"../../assets/img/angular.jpg\" />\r\n                  <div className=\"items-content m-4\">\r\n                    <p>Mr. Duy vu</p>\r\n                    <p className=\"text-lightBlue-600\">New York, USA</p>\r\n                  </div>\r\n                </th>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Appointment With</p>\r\n                  <p className=\"text-lightBlue-600\">Dr. Cristina Groves</p>\r\n                </td>\r\n                <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left\">\r\n                  <p>Timing</p>\r\n                  <p className=\"text-lightBlue-600\">7.00 PM</p>\r\n                </td>\r\n                <td className=\" border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-right\">\r\n                  <button\r\n                    className=\"bg-white h-10 mr-4 active:bg-lightBlue-600 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                    style={{\r\n                      border: '1px solid  rgba(14, 165, 233) ',\r\n                      color: 'rgba(14, 165, 233)',\r\n                    }}\r\n                    type=\"button\"\r\n                  >\r\n                    Take up\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardStats.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\News\\index.tsx",[],["409","410"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dropdowns\\UserDropdown.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dropdowns\\NotificationDropdown.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Navbars\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\components\\CustomInput\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\Nav.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\News\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\components\\CustomInput\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\components\\ItemDoctor\\index.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dialog\\index.tsx",[],["411","412"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Dialog\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\Header.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\Forgot\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\SignUpStepper\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Authentication\\LoginForm\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\NavBar\\SubNav.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\views\\admin\\Add.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardAdd.tsx",["413","414","415","416","417","418","419","420","421","422","423"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { rootState } from 'store/reducers';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { FormDialog } from '../Dialog';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Formik, Form } from 'formik';\r\nimport { Container, Grid, TextField } from '@material-ui/core';\r\n\r\nexport default function CardAdd(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [formDialog, setFormDialog] = React.useState(false);\r\n\r\n  const { data } = useSelector((state: rootState) => state.userReducer.getAllUser);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setFormDialog(false);\r\n  };\r\n\r\n  const addIn = async values => {};\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        name: '',\r\n        password: '',\r\n      }}\r\n      onSubmit={addIn}\r\n    >\r\n      {({ handleChange, values, errors, handleSubmit }) => (\r\n        <Form>\r\n          <div\r\n            className={\r\n              'relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded ' +\r\n              (props.color === 'light' ? 'bg-white' : 'bg-lightBlue-900 text-white')\r\n            }\r\n          >\r\n            <h1>ADD</h1>\r\n            <br></br>\r\n            <div className=\"block w-full overflow-x-auto\">\r\n              <Container>\r\n                <Grid item={true} xs={12}>\r\n                  <TextField\r\n                    //defaultValue={values.name : ''}\r\n                    name=\"email\"\r\n                    id=\"filled-basic\"\r\n                    label=\"Email (*)\"\r\n                    variant=\"filled\"\r\n                    helperText={errors.name}\r\n                    value={values.name}\r\n                    error={Boolean(errors.name)}\r\n                    //className={classes.filled1}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n              </Container>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nCardAdd.defaultProps = {\r\n  color: 'light',\r\n};\r\n",["424","425"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardSettings.tsx",["426","427"],"import React, { useRef, forwardRef } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Cookies from 'js-cookie';\r\nimport Images from 'app/asset/image/';\r\nimport useStyles from './styles';\r\n\r\nexport default function CardSettings(props) {\r\n  const refToAvatar = useRef<HTMLInputElement>(null);\r\n  const classes = useStyles();\r\n  const { data } = props;\r\n\r\n  const handleChooseAvatar = () => {\r\n    if (refToAvatar.current !== null) {\r\n      refToAvatar.current.click();\r\n    }\r\n  };\r\n\r\n  console.log(props.slug);\r\n\r\n  const CustomInputDatePicker = forwardRef((props: any, ref) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          style={{\r\n            border: '0px',\r\n            height: '44px',\r\n            width: '100% ',\r\n            padding: '0.75rem',\r\n            outline: 'none',\r\n            color: 'rgba(71, 85, 105,1)',\r\n            borderRadius: '0.25rem',\r\n            fontSize: '0.875rem',\r\n            lineHeight: '1.25rem',\r\n            boxShadow: ' 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\r\n            '&:hover': {\r\n              outline: 20,\r\n              boreder: '1px solid #000',\r\n            },\r\n          }}\r\n          {...props}\r\n          ref={ref}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const signUp = async values => {\r\n    props.onSubmit(values);\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          id: data && data.id !== 'undefined' ? data.id : '',\r\n          userName: data && data.userName !== 'undefined' ? data.userName : '',\r\n          email: data && data.email !== 'undefined' ? data.email : '',\r\n          fistName: data && data.fistName !== 'undefined' ? data.fistName : '',\r\n          lastName: data && data.lastName !== 'undefined' ? data.lastName : '',\r\n          role: props.slug === 'doctor' ? { value: 'doctor' } : { value: 'user' },\r\n          dateOfBirth:\r\n            data && data.dateOfBirth !== 'undefined' ? new Date(data.dateOfBirth) : new Date(),\r\n          password: '',\r\n          changepassword: '',\r\n          country: data && data.country !== 'undefined' ? data.country : '',\r\n          city: data && data.city !== 'undefined' ? data.city : '',\r\n          address: data && data.address !== 'undefined' ? data.address : '',\r\n          postalCode: data && data.postalCode !== 'undefined' ? data.postalCode : '',\r\n          phone: data && data.phone !== 'undefined' ? data.phone : '',\r\n          avatar: data && data.avatar !== 'undefined' ? data.avatar : '',\r\n          avatarLocal: data && data.avatar !== 'undefined' ? data.avatar : '',\r\n          token: Cookies.get('access_token'),\r\n        }}\r\n        validationSchema={Schema}\r\n        onSubmit={signUp}\r\n      >\r\n        {({ handleChange, values, setFieldValue, errors, handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0\">\r\n              <div className=\"rounded-t bg-white mb-0 px-6 py-6\">\r\n                <div className=\"text-center flex justify-between\">\r\n                  <h6 className=\"text-blueGray-700 text-xl font-bold\">\r\n                    {' '}\r\n                    {` ${data ? `UPDATE` : `ADD`} ${props.slug.toUpperCase()}`}{' '}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n                <form>\r\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                    AVATAR\r\n                  </h6>\r\n                  <div className=\"flex flex-wrap\">\r\n                    <div className=\"w-full lg:w-12/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <input\r\n                          hidden\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          name=\"avatar\"\r\n                          onChange={e => {\r\n                            //@ts-ignore\r\n\r\n                            const file = e.target.files[0];\r\n                            const fileLocal = URL.createObjectURL(file);\r\n                            setFieldValue('avatar', file);\r\n                            setFieldValue('avatarLocal', fileLocal);\r\n                          }}\r\n                          ref={refToAvatar}\r\n                        />\r\n                        {\r\n                          //@ts-ignore\r\n                          values.avatar ? (\r\n                            <>\r\n                              <img src={values.avatarLocal} className={classes.avatar} />\r\n                              <div onClick={handleChooseAvatar} className={classes.changeImage}>\r\n                                Change image\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <div className={classes.areaUploadAvatar} onClick={handleChooseAvatar}>\r\n                              <img src={Images.iconAdd.default} style={{ margin: 'auto' }} />\r\n                            </div>\r\n                          )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n\r\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                    User Information\r\n                  </h6>\r\n                  <div className=\"flex flex-wrap\">\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Username (*)\r\n                        </label>\r\n                        <input\r\n                          name=\"userName\"\r\n                          value={values.userName}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter user name\"\r\n                          type=\"text\"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.userName) && errors.userName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Email address (*)\r\n                        </label>\r\n                        <input\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          value={values.email}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter email your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.email) && errors.email}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          First Name (*)\r\n                        </label>\r\n                        <input\r\n                          name=\"fistName\"\r\n                          type=\"text\"\r\n                          value={values.fistName}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter fist name your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"Lucky\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.fistName) && errors.fistName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Last Name (*)\r\n                        </label>\r\n                        <input\r\n                          name=\"lastName\"\r\n                          type=\"text\"\r\n                          value={values.lastName}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter last name your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"Jesse\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.lastName) && errors.lastName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Password\r\n                        </label>\r\n                        <input\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter password your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"Lucky\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.password) && errors.password}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Confirm Password\r\n                        </label>\r\n                        <input\r\n                          name=\"changepassword\"\r\n                          type=\"password\"\r\n                          value={values.changepassword}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter confirm password your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <p className={classes.err}>\r\n                          {Boolean(errors.changepassword) && errors.changepassword}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative  w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Date Of Birth (*)\r\n                        </label>\r\n                        <DatePicker\r\n                          wrapperClassName={classes.wrapper}\r\n                          selected={values.dateOfBirth}\r\n                          onChange={date => {\r\n                            setFieldValue('dateOfBirth', date);\r\n                          }}\r\n                          isClearable={true}\r\n                          customInput={<CustomInputDatePicker />}\r\n                        />\r\n                      </div>\r\n                      <p className={classes.err}>\r\n                        {Boolean(errors.dateOfBirth) && errors.dateOfBirth}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-6/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Phone Number (*)\r\n                        </label>\r\n                        <input\r\n                          name=\"phone\"\r\n                          type=\"text\"\r\n                          value={values.phone}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter phone your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.phone) && errors.phone}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\r\n                  <h6 className=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\">\r\n                    Contact Information\r\n                  </h6>\r\n                  <div className=\"flex flex-wrap\">\r\n                    <div className=\"w-full lg:w-12/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Address\r\n                        </label>\r\n                        <input\r\n                          name=\"address\"\r\n                          type=\"text\"\r\n                          value={values.address}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter address your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.address) && errors.address}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          City\r\n                        </label>\r\n                        <input\r\n                          name=\"city\"\r\n                          type=\"text\"\r\n                          value={values.city}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter city your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.city) && errors.city}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Country\r\n                        </label>\r\n                        <input\r\n                          name=\"country\"\r\n                          type=\"text\"\r\n                          value={values.country}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter country your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"United States\"\r\n                        />\r\n                        <p className={classes.err}>{Boolean(errors.country) && errors.country}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full lg:w-4/12 px-4\">\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Postal Code\r\n                        </label>\r\n                        <input\r\n                          name=\"postalCode\"\r\n                          type=\"text\"\r\n                          value={values.postalCode}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Enter postal code your \"\r\n                          className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\r\n                          defaultValue=\"Postal Code\"\r\n                        />\r\n                        <p className={classes.err}>\r\n                          {Boolean(errors.postalCode) && errors.postalCode}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\" justify-center  flex w-full lg:w-12/12 px-4\">\r\n                <button\r\n                  className=\"bg-white max-w-200-px h-12 mr-4 active:bg-lightBlue-600 text-white text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-mx-auto mb-1 ease-linear transition-all duration-150\"\r\n                  style={{\r\n                    width: '100%',\r\n                    border: '1px solid  rgba(14, 165, 233) ',\r\n                    color: 'rgba(14, 165, 233)',\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  {data ? `UPDATE` : `CREATE ${props.slug.toUpperCase()}`}{' '}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Schema = Yup.object().shape({\r\n  userName: Yup.string()\r\n    .trim()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid user name.!')\r\n    .min(5, 'User name too Short !')\r\n    .max(13, 'User name Too Long !')\r\n    .required('Please enter user name !'),\r\n  email: Yup.string()\r\n    .trim()\r\n    .min(10, ' Email too Short !')\r\n    .max(25, 'Email too Long !')\r\n    .required('Please enter phone !'),\r\n  fistName: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid fist name !')\r\n    .min(0, 'Fist name too Short !')\r\n    .max(15, 'Fist name too Long !')\r\n    .required('Please enter fist name !'),\r\n  lastName: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid last name.!')\r\n    .min(0, ' Last name too Short ')\r\n    .max(10, 'Last name too Long !')\r\n    .required('Please enter last name.!'),\r\n  dateOfBirth: Yup.string()\r\n    .min(0, 'Date of birth too Short !')\r\n    .max(100, 'Date of birth too Long !')\r\n    .required('Please enter day of birth.!'),\r\n  country: Yup.string()\r\n    .matches(/^[A-Za-z 0-9]*$/, 'Please enter valid  country.!')\r\n    .min(0, 'Country too Short !')\r\n    .max(50, 'Country too Long !')\r\n    .required('Please enter country !'),\r\n  city: Yup.string().min(0, 'Too Short !').max(50, 'Too Long !').required('Please enter city.!'),\r\n  address: Yup.string()\r\n    .min(0, 'Address too Short !')\r\n    .max(10, 'Address too Long !')\r\n    .required('Please enter address !'),\r\n  postalCode: Yup.string()\r\n    .min(0, 'Postal code too Short !')\r\n    .max(10, 'Postal code too Long !')\r\n    .required('Please enter postal code !'),\r\n  phone: Yup.string()\r\n    .trim()\r\n    .min(0, 'Phone too Short !')\r\n    .max(13, 'Phone too Long !')\r\n    .required('Please enter phone !'),\r\n  avatar: Yup.string()\r\n    .trim()\r\n    .min(0, 'Avatar too Short !')\r\n    .max(250, 'Avatar too Long !')\r\n    .required('Please enter avatar !'),\r\n  password: Yup.string().required('Please enter password !').min(8),\r\n  changepassword: Yup.string()\r\n    .min(8)\r\n    .required('Please enter confirm password !')\r\n    .when('password', {\r\n      is: val => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\r\n    }),\r\n});\r\n","C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardLineChart.js",[],["428","429"],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\CardBarChart.js",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\pages\\Admin\\components\\Cards\\styles.tsx",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\sagas\\util.ts",[],"C:\\Users\\vuvan\\OneDrive\\Documents\\Capstone1\\frontend\\src\\app\\components\\List\\components\\Header\\index.tsx",["430"],{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":14},{"ruleId":"435","severity":1,"message":"439","line":69,"column":13,"nodeType":"437","messageId":"438","endLine":69,"endColumn":17},{"ruleId":"435","severity":1,"message":"440","line":17,"column":10,"nodeType":"437","messageId":"438","endLine":17,"endColumn":19},{"ruleId":"441","severity":1,"message":"442","line":363,"column":25,"nodeType":"443","endLine":363,"endColumn":100},{"ruleId":"441","severity":1,"message":"442","line":370,"column":25,"nodeType":"443","endLine":370,"endColumn":61},{"ruleId":"435","severity":1,"message":"444","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":36},{"ruleId":"435","severity":1,"message":"445","line":1,"column":38,"nodeType":"437","messageId":"438","endLine":1,"endColumn":44},{"ruleId":"435","severity":1,"message":"446","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"435","severity":1,"message":"447","line":6,"column":36,"nodeType":"437","messageId":"438","endLine":6,"endColumn":47},{"ruleId":"435","severity":1,"message":"448","line":18,"column":20,"nodeType":"437","messageId":"438","endLine":18,"endColumn":31},{"ruleId":"435","severity":1,"message":"444","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":36},{"ruleId":"435","severity":1,"message":"445","line":1,"column":38,"nodeType":"437","messageId":"438","endLine":1,"endColumn":44},{"ruleId":"435","severity":1,"message":"446","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"435","severity":1,"message":"447","line":6,"column":36,"nodeType":"437","messageId":"438","endLine":6,"endColumn":47},{"ruleId":"435","severity":1,"message":"448","line":17,"column":20,"nodeType":"437","messageId":"438","endLine":17,"endColumn":31},{"ruleId":"449","severity":1,"message":"450","line":13,"column":17,"nodeType":"443","endLine":16,"endColumn":18},{"ruleId":"449","severity":1,"message":"450","line":24,"column":19,"nodeType":"443","endLine":27,"endColumn":20},{"ruleId":"449","severity":1,"message":"450","line":32,"column":19,"nodeType":"443","endLine":35,"endColumn":20},{"ruleId":"451","severity":1,"message":"452","line":20,"column":6,"nodeType":"453","endLine":20,"endColumn":8,"suggestions":"454"},{"ruleId":"435","severity":1,"message":"455","line":22,"column":10,"nodeType":"437","messageId":"438","endLine":22,"endColumn":20},{"ruleId":"435","severity":1,"message":"456","line":14,"column":16,"nodeType":"437","messageId":"438","endLine":14,"endColumn":23},{"ruleId":"441","severity":1,"message":"442","line":40,"column":25,"nodeType":"443","endLine":40,"endColumn":81},{"ruleId":"435","severity":1,"message":"457","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":16},{"ruleId":"441","severity":1,"message":"442","line":37,"column":19,"nodeType":"443","endLine":37,"endColumn":91},{"ruleId":"441","severity":1,"message":"442","line":66,"column":19,"nodeType":"443","endLine":66,"endColumn":91},{"ruleId":"441","severity":1,"message":"442","line":95,"column":19,"nodeType":"443","endLine":95,"endColumn":91},{"ruleId":"441","severity":1,"message":"442","line":124,"column":19,"nodeType":"443","endLine":124,"endColumn":91},{"ruleId":"441","severity":1,"message":"442","line":153,"column":19,"nodeType":"443","endLine":153,"endColumn":91},{"ruleId":"431","replacedBy":"458"},{"ruleId":"433","replacedBy":"459"},{"ruleId":"431","replacedBy":"460"},{"ruleId":"433","replacedBy":"461"},{"ruleId":"435","severity":1,"message":"462","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":34},{"ruleId":"435","severity":1,"message":"463","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"464","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":20},{"ruleId":"435","severity":1,"message":"465","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":14},{"ruleId":"435","severity":1,"message":"466","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":18},{"ruleId":"435","severity":1,"message":"467","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":16},{"ruleId":"435","severity":1,"message":"468","line":9,"column":8,"nodeType":"437","messageId":"438","endLine":9,"endColumn":15},{"ruleId":"435","severity":1,"message":"469","line":14,"column":10,"nodeType":"437","messageId":"438","endLine":14,"endColumn":14},{"ruleId":"435","severity":1,"message":"455","line":15,"column":10,"nodeType":"437","messageId":"438","endLine":15,"endColumn":20},{"ruleId":"435","severity":1,"message":"439","line":17,"column":11,"nodeType":"437","messageId":"438","endLine":17,"endColumn":15},{"ruleId":"435","severity":1,"message":"470","line":19,"column":9,"nodeType":"437","messageId":"438","endLine":19,"endColumn":20},{"ruleId":"431","replacedBy":"471"},{"ruleId":"433","replacedBy":"472"},{"ruleId":"441","severity":1,"message":"442","line":117,"column":31,"nodeType":"443","endLine":117,"endColumn":90},{"ruleId":"441","severity":1,"message":"442","line":124,"column":31,"nodeType":"443","endLine":124,"endColumn":94},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"473","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":13},"no-native-reassign",["474"],"no-negated-in-lhs",["475"],"@typescript-eslint/no-unused-vars","'News' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'parseJSON' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useRef' is defined but never used.","'rootState' is defined but never used.","'useSelector' is defined but never used.","'setLocation' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["476"],"'formDialog' is assigned a value but never used.","'setData' is assigned a value but never used.","'Button' is defined but never used.",["474"],["475"],["474"],["475"],"'useDispatch' is defined but never used.","'Pagination' is defined but never used.","'FormDialog' is defined but never used.","'Link' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'AddIcon' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["474"],["475"],"'Image' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},"Update the dependencies array to be: [dispatch]",{"range":"479","text":"480"},[657,659],"[dispatch]"]